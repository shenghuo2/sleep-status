name: Multi-Platform Build and Package

on:
  workflow_dispatch:
  push:
    branches:
      - master

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        include:
          - goos: linux
            goarch: amd64
          - goos: linux
            goarch: arm64
          - goos: windows
            goarch: amd64
          - goos: darwin
            goarch: amd64
          - goos: darwin
            goarch: arm64

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.16

      - name: Build application
        env:
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}
        run: |
          if [ "${{ matrix.goos }}" = "windows" ]; then \
            go build -o sleep-status-${{ matrix.goos }}-${{ matrix.goarch }}.exe .; \
          else \
            go build -o sleep-status-${{ matrix.goos }}-${{ matrix.goarch }} .; \
          fi

      - name: Generate SHA256 checksum
        run: |
          if [ "${{ matrix.goos }}" = "windows" ]; then \
            sha256sum sleep-status-${{ matrix.goos }}-${{ matrix.goarch }}.exe >> sha256-${{ matrix.goos }}-${{ matrix.goarch }}.txt; \
          else \
            sha256sum sleep-status-${{ matrix.goos }}-${{ matrix.goarch }} >> sha256-${{ matrix.goos }}-${{ matrix.goarch }}.txt; \
          fi

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: sleep-status-${{ matrix.goos }}-${{ matrix.goarch }}
          path: |
            sleep-status-${{ matrix.goos }}-${{ matrix.goarch }}*
            sha256-${{ matrix.goos }}-${{ matrix.goarch }}.txt

  package:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: sleep-status-linux-amd64
          path: ./build/linux/amd64
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: sleep-status-linux-arm64
          path: ./build/linux/arm64
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: sleep-status-windows-amd64
          path: ./build/windows/amd64
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: sleep-status-darwin-amd64
          path: ./build/darwin/amd64
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: sleep-status-darwin-arm64
          path: ./build/darwin/arm64

      - name: Create tarballs of the binaries
        run: |
          mkdir -p release
          tar -czvf release/sleep-status-linux-amd64.tar.gz -C ./build/linux/amd64 .
          tar -czvf release/sleep-status-linux-arm64.tar.gz -C ./build/linux/arm64 .
          tar -czvf release/sleep-status-windows-amd64.tar.gz -C ./build/windows/amd64 .
          tar -czvf release/sleep-status-darwin-amd64.tar.gz -C ./build/darwin/amd64 .
          tar -czvf release/sleep-status-darwin-arm64.tar.gz -C ./build/darwin/arm64 .

      - name: Append SHA256 checksums
        run: |
          cat ./build/linux/amd64/sha256*.txt > release/sha256.txt
          cat ./build/linux/arm64/sha256*.txt >> release/sha256.txt
          cat ./build/windows/amd64/sha256*.txt >> release/sha256.txt
          cat ./build/darwin/amd64/sha256*.txt >> release/sha256.txt
          cat ./build/darwin/arm64/sha256*.txt >> release/sha256.txt

      - name: Generate release tag
        id: tag
        run: |
          tag="v$(date +'%Y.%m.%d-%H%M')"
          echo "tag=$tag" >> $GITHUB_OUTPUT
          git config --global user.email "github-actions@github.com"
          git config --global user.name "GitHub Actions"
          git tag $tag
          git push origin $tag

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.tag.outputs.tag }}
          draft: true
          files: |
            release/*.tar.gz
          name: Release ${{ steps.tag.outputs.tag }}
          body: |
            Automated draft release created on $(date +'%Y-%m-%d %H:%M:%S')
            
            This release contains pre-built binaries for the following platforms:
            - Linux (amd64, arm64)
            - Windows (amd64)
            - macOS (amd64, arm64)
            
            Commit: ${{ github.sha }}
            
            Please edit this draft to add release notes before publishing.
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
